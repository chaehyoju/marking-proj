<template>
  <div ref="waveform"></div>
  <div ref="equalform" class="my-2"></div>
</template>

<script setup>
import { onMounted, ref } from "vue";
import WaveSurfer from "wavesurfer.js";
import WaveCursor from "wavesurfer.js/dist/plugin/wavesurfer.cursor";

const props = defineProps({
  src: String,
});

const waveform = ref(null);
const equalform = ref(null);
let wavesurfer;

const play = () => {
  wavesurfer.play();
}

onMounted(() => {
  wavesurfer = WaveSurfer.create({
    container: waveform.value,
    height: 64,
    backend: "MediaElementWebAudio",
    cursorWidth: 0,
    mediaControls: true,
    hideScrollbar: true,
    plugins: [
      WaveCursor.create({
        showTime: true,
        opacity: 1,
        customShowTimeStyle: {
          "background-color": "#374151",
          color: "#fff",
          padding: "3px",
          "font-size": "12px",
        },
      }),
    ],
    waveColor: "#f59e0b",
    progressColor: "#b45309",
    // cursorColor: 'transparent',
  });
  // document.querySelectorAll("audio")[0].setAttribute("controlsList", "nodownload noplaybackrate");

  wavesurfer.load(props.src);
  // waveform.value
  //  .getElementsByTagName("audio")[0]
  //  .setAttribute("controlsList", "nodownload noplaybackrate");

  wavesurfer.on("ready", function () {
    let EQ = [
      {
        f: 32,
        type: "lowshelf",
      },
      {
        f: 64,
        type: "peaking",
      },
      {
        f: 125,
        type: "peaking",
      },
      {
        f: 250,
        type: "peaking",
      },
      {
        f: 500,
        type: "peaking",
      },
      {
        f: 1000,
        type: "peaking",
      },
      {
        f: 2000,
        type: "peaking",
      },
      {
        f: 4000,
        type: "peaking",
      },
      {
        f: 8000,
        type: "peaking",
      },
      {
        f: 16000,
        type: "highshelf",
      },
    ];
    let filters = EQ.map(function (band) {
      let filter = wavesurfer.backend.ac.createBiquadFilter();
      filter.type = band.type;
      filter.gain.value = 0;
      filter.Q.value = 1;
      filter.frequency.value = band.f;
      return filter;
    });

    // Connect filters to wavesurfer
    wavesurfer.backend.setFilters(filters);

    let container = equalform.value;
    filters.forEach(function (filter) {
      let input = document.createElement("input");
      Object.assign(input, {
        type: "range",
        min: -40,
        max: 40,
        value: 0,
        title: filter.frequency.value,
      });
      input.style.display = "inline-block";
      input.setAttribute("orient", "vertical");
      wavesurfer.util.style(input, {
        webkitAppearance: "slider-vertical",
        width: "50px",
        height: "150px",
      });
      container.appendChild(input);

      let onChange = function (e) {
        filter.gain.value = ~~e.target.value;
      };

      input.addEventListener("input", onChange);
      input.addEventListener("change", onChange);
    });
  });
});
</script>
